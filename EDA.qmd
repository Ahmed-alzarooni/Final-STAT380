---
title: "Final-STAT380"
author: "Ahmed alzarooni{style='background-color: yellow;'}"
toc: true
title-block-banner: true
title-block-style: default
execute: 
  freeze: true
  cache: true
format:
  #html: # comment this line to get pdf
   pdf: 
    fig-width: 7
    fig-height: 7
---


---
#### Step 1: Load Necessary Libraries
First, ensure you have the necessary libraries. We'll use readxl to import Excel files and dplyr and ggplot2 for data manipulation and visualization.

We will need the following packages:


```{R, message=FALSE, warning=FALSE, results='hide'}
packages <- c(
  "readxl",
  "tibble",
  "dplyr", 
  "readr", 
  "tidyr", 
  "purrr", 
  "broom",
  "magrittr",
  "corrplot",
  "caret",
  "rpart",
  "rpart.plot",
  "e1071",
  "torch", 
  "luz",
  "stringr",
  "esquisse",
  "randomForest"
)

#renv::install(packages)
sapply(packages,library, character.only=T)
```

<br><br><br><br>
---

#### Step 2: Read the Data and initial Data Cleaning
Use read_excel to load the data from the Excel files.Check for missing values and decide how to handle them, either by removing or imputing.


```{R}
# Read the datasets
code_income_level <- read_excel("Code and Income Level.xls")
gdp_data <- read_excel("GDP.xls")

Electricity_Access <- read_excel("All.xlsx")

```


---

#### Step 3: Initial Data Examination
Check basic information about the datasets such as dimensions, column names, and a preview of the data.


```{R}
head(code_income_level)
head(gdp_data)
head(Electricity_Access)
```

---

#### Step 4: Data Cleaning
Check for missing values and decide how to handle them, either by removing or imputing.


```{R}
code_income_level <- code_income_level %>%
  mutate(income_level = factor(IncomeGroup, levels = c("Low income", "Lower middle income", "Upper middle income", "High income"), ordered = TRUE))


gdp_data <- gdp_data %>%
  select('Country Name','Country Code', '2000', '2005', '2010', '2015', '2022')


comb_GDP_inc_df <- inner_join(gdp_data, code_income_level, by = "Country Code")
head(comb_GDP_inc_df)
```

```{R}
#Check for identical values
identical_values <- comb_GDP_inc_df$income_level == comb_GDP_inc_df$income_group
sum(!identical_values)
comb_GDP_inc_df_long <- comb_GDP_inc_df %>%
  select(-IncomeGroup)
comb_GDP_inc_df_long <- pivot_longer(comb_GDP_inc_df_long, 
                                        cols = c(`2000`, `2005`, `2010`, `2015`, `2022`), 
                                        names_to = "Year", 
                                        values_to = "GDP")

comb_GDP_inc_df_long <- na.omit(comb_GDP_inc_df_long)
colnames(comb_GDP_inc_df_long)

```

```{R}
Electricity_Access <- Electricity_Access %>%
  mutate(across(where(is.character) & !all_of("Country"), ~str_replace(., ">99%", "0.990"))) %>%
  mutate(across(where(is.character) & !all_of("Country"), as.numeric)) %>%
  mutate(across(where(is.numeric), round, digits = 3))

Electricity_Access_long <- pivot_longer(Electricity_Access, 
                                        cols = c(`2000`, `2005`, `2010`, `2015`, `2022`), 
                                        names_to = "Year", 
                                        values_to = "Access")
Electricity_Access_long <- rename(Electricity_Access_long, 'Country Name' = 'Country')
head(Electricity_Access)
head(Electricity_Access_long)
```

```{R}

data_merged <- inner_join(Electricity_Access_long, comb_GDP_inc_df_long, by = c("Country Name", "Year"))
data_merged <- na.omit(data_merged)

summary(data_merged)
```



---

#### Step 5: Summary Statistics
Get a statistical summary of the datasets to understand the distribution of data.

```{R}
summary(comb_GDP_inc_df)
summary(Electricity_Access)

```

#### Step 6: Visualization
######Example 1: Bar Chart of income_level count and IncomeGroup

```{R}
ggplot(comb_GDP_inc_df) +
  aes(x = income_level, fill = IncomeGroup) +
  geom_bar() +
  scale_fill_hue(direction = 1) +
  theme_minimal()
```

###### Example 2: Line Plot of 3 countries showing 3 different states of Electricity access

```{R}
filtered_countries <- Electricity_Access_long %>% 
  filter(`Country Name` %in% c("China", "India", "Yemen"))

ggplot(filtered_countries, aes(x = Year, y = Access, color = `Country Name`, group = `Country Name`)) +
  geom_line() + 
  geom_point() + 
  labs(title = "Electricity Access Over Time",
       x = "Year",
       y = "Access",
       color = "Country") + 
  theme_minimal()

```
###### Example 3: Boxplot for Access by income_level
```{R}
ggplot(data_merged, aes(x = income_level, y = Access)) + 
    geom_boxplot() +
    theme_minimal() +
    ggtitle("Electricity Access by Income Level")

```

---

#### Step 7: Model Training

```{R}
# set.seed(123)  # for reproducibility
# training_rows <- createDataPartition(data_merged$'2022', p = 0.8, list = FALSE)
# train_data <- comb_GDP_inc_df[training_rows, ]
# test_data <- comb_GDP_inc_df[-training_rows, ]
```

```{R}
data_merged$log_GDP <- log(data_merged$GDP + 1)

# Set up training control
train_control <- trainControl(method = "cv", number = 10)

# Train the model
model <- train(income_level ~ log_GDP + Access, data = data_merged, method = "rpart", trControl = train_control)
```
---




:::{.hidden unless-format="pdf"}
\pagebreak
:::

<br><br><br><br>
<br><br><br><br>
---



::: {.callout-note collapse="true"}
## Session Information

Print your `R` session information using the following command

```{R}
sessionInfo()
```
:::